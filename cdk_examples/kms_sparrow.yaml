Resources:
  iamuser17611A42:
    Type: AWS::IAM::User
    Properties:
      Groups:
        - Ref: groupC397F008
      UserName: testuser
    Metadata:
      aws:cdk:path: cdk-examples/iam_user/Resource
  iamuserDefaultPolicy8A947B6C:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - kms:Decrypt
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - kmsBDE0CB5A
                - Arn
        Version: "2012-10-17"
      PolicyName: iamuserDefaultPolicy8A947B6C
      Users:
        - Ref: iamuser17611A42
    Metadata:
      aws:cdk:path: cdk-examples/iam_user/DefaultPolicy/Resource
  accesskeys:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName:
        Ref: iamuser17611A42
    Metadata:
      aws:cdk:path: cdk-examples/access_keys
  groupC397F008:
    Type: AWS::IAM::Group
    Properties:
      GroupName: Admin
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AdministratorAccess
    Metadata:
      aws:cdk:path: cdk-examples/group/Resource
  kmsBDE0CB5A:
    Type: AWS::KMS::Key
    Properties:
      KeyPolicy:
        Statement:
          - Action:
              - kms:Create*
              - kms:Describe*
              - kms:Enable*
              - kms:List*
              - kms:Put*
              - kms:Update*
              - kms:Revoke*
              - kms:Disable*
              - kms:Get*
              - kms:Delete*
              - kms:ScheduleKeyDeletion
              - kms:CancelKeyDeletion
              - kms:GenerateDataKey
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
            Resource: "*"
          - Action:
              - kms:Decrypt
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - iamuser17611A42
                  - Arn
            Resource: "*"
        Version: "2012-10-17"
      Description: keys for twitter api
      EnableKeyRotation: true
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: cdk-examples/kms/Resource
  kmsAliasDEC4E16E:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/kms_twitter_api
      TargetKeyId:
        Fn::GetAtt:
          - kmsBDE0CB5A
          - Arn
    Metadata:
      aws:cdk:path: cdk-examples/kms/Alias/Resource
  KMSAccessforLambda189DC58C:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: cdk-examples/KMS_Access_for_Lambda/Resource
  KmsPolicyA6529047:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: "*"
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: Lambda_KMS
      Roles:
        - Ref: KMSAccessforLambda189DC58C
    Metadata:
      aws:cdk:path: cdk-examples/Kms_Policy/Resource
  twitterfunction622E8142:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersb90902b55461b79880a31bedf0b45f3aea283ea01b6dc70e0819ef470fed3d0dS3BucketBBD86B26
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersb90902b55461b79880a31bedf0b45f3aea283ea01b6dc70e0819ef470fed3d0dS3VersionKeyD084BF25
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersb90902b55461b79880a31bedf0b45f3aea283ea01b6dc70e0819ef470fed3d0dS3VersionKeyD084BF25
      Handler: sparrow_kms.handler
      Role:
        Fn::GetAtt:
          - KMSAccessforLambda189DC58C
          - Arn
      Runtime: python3.7
      Description: sending tweets every one hour
      FunctionName: automated_tweets
    DependsOn:
      - KMSAccessforLambda189DC58C
    Metadata:
      aws:cdk:path: cdk-examples/twitter_function/Resource
      aws:asset:path: asset.b90902b55461b79880a31bedf0b45f3aea283ea01b6dc70e0819ef470fed3d0d.zip
      aws:asset:property: Code
  twitterfunctionAllowEventRulecdkexamplesSchedulefortwitterD5031B396FC371A2:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - twitterfunction622E8142
          - Arn
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
          - SchedulefortwitterBD14F8F3
          - Arn
    Metadata:
      aws:cdk:path: cdk-examples/twitter_function/AllowEventRulecdkexamplesSchedulefortwitterD5031B39
  SchedulefortwitterBD14F8F3:
    Type: AWS::Events::Rule
    Properties:
      Description: send tweets every one hour
      Name: send_every_1_hour
      ScheduleExpression: rate(1 minute)
      State: ENABLED
      Targets:
        - Arn:
            Fn::GetAtt:
              - twitterfunction622E8142
              - Arn
          Id: Target0
    Metadata:
      aws:cdk:path: cdk-examples/Schedule_for_twitter/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=1.17.1,@aws-cdk/assets=1.18.0,@aws-cdk/aws-apigateway=1.18.0,@aws-cdk/aws-applicationautoscaling=1.18.0,@aws-cdk/aws-autoscaling=1.18.0,@aws-cdk/aws-autoscaling-common=1.18.0,@aws-cdk/aws-autoscaling-hooktargets=1.18.0,@aws-cdk/aws-certificatemanager=1.18.0,@aws-cdk/aws-cloudformation=1.18.0,@aws-cdk/aws-cloudfront=1.18.0,@aws-cdk/aws-cloudwatch=1.18.0,@aws-cdk/aws-codebuild=1.18.0,@aws-cdk/aws-codecommit=1.18.0,@aws-cdk/aws-codepipeline=1.18.0,@aws-cdk/aws-dynamodb=1.17.1,@aws-cdk/aws-ec2=1.18.0,@aws-cdk/aws-ecr=1.18.0,@aws-cdk/aws-ecr-assets=1.18.0,@aws-cdk/aws-ecs=1.18.0,@aws-cdk/aws-elasticloadbalancing=1.18.0,@aws-cdk/aws-elasticloadbalancingv2=1.18.0,@aws-cdk/aws-events=1.18.0,@aws-cdk/aws-events-targets=1.18.0,@aws-cdk/aws-iam=1.18.0,@aws-cdk/aws-kms=1.18.0,@aws-cdk/aws-lambda=1.18.0,@aws-cdk/aws-logs=1.18.0,@aws-cdk/aws-route53=1.18.0,@aws-cdk/aws-route53-targets=1.18.0,@aws-cdk/aws-s3=1.18.0,@aws-cdk/aws-s3-assets=1.18.0,@aws-cdk/aws-s3-notifications=1.18.0,@aws-cdk/aws-secretsmanager=1.18.0,@aws-cdk/aws-servicediscovery=1.18.0,@aws-cdk/aws-sns=1.18.0,@aws-cdk/aws-sns-subscriptions=1.18.0,@aws-cdk/aws-sqs=1.18.0,@aws-cdk/aws-ssm=1.18.0,@aws-cdk/aws-stepfunctions=1.18.0,@aws-cdk/core=1.18.0,@aws-cdk/cx-api=1.18.0,@aws-cdk/region-info=1.18.0,jsii-runtime=Python/3.7.4
    Condition: CDKMetadataAvailable
Outputs:
  accesskey:
    Value:
      Ref: accesskeys
  secretkey:
    Value:
      Fn::GetAtt:
        - accesskeys
        - SecretAccessKey
Parameters:
  AssetParametersb90902b55461b79880a31bedf0b45f3aea283ea01b6dc70e0819ef470fed3d0dS3BucketBBD86B26:
    Type: String
    Description: S3 bucket for asset "b90902b55461b79880a31bedf0b45f3aea283ea01b6dc70e0819ef470fed3d0d"
  AssetParametersb90902b55461b79880a31bedf0b45f3aea283ea01b6dc70e0819ef470fed3d0dS3VersionKeyD084BF25:
    Type: String
    Description: S3 key for asset version "b90902b55461b79880a31bedf0b45f3aea283ea01b6dc70e0819ef470fed3d0d"
  AssetParametersb90902b55461b79880a31bedf0b45f3aea283ea01b6dc70e0819ef470fed3d0dArtifactHash0BDE76AE:
    Type: String
    Description: Artifact hash for asset "b90902b55461b79880a31bedf0b45f3aea283ea01b6dc70e0819ef470fed3d0d"
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

